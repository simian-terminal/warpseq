<h1>User Interface - COMING SOON</h1>

<p>
The user interface for Warp will be available in a future release, aiming for Fall of 2020. Until then, everything can be done in python with the {{ doc('api') }} if you know
how to program. What follows is an explanation of the UI as planned (almost a requirements document!) to peak interest.
</p>

<h2>General Concepts</h2>

<ul>
<li>The UI will have a very small number of pages and should be very simple to use</li>
<li>You will start it by starting a server and going to http://port</li>
<li>There is no authentication and you run this on your local machine, the one with the MIDI devices</li>
<li>You will probably have Ableton or some other tool open behind the DAW to host VSTs and control audio, or even to record MIDI from Warp</li>
<li>There are no menu bars.</li>
<li>The server starts up with an empty song.  It only keeps one song in memory at a time.</li>
</ul>

<h2>Grid View</h2>

<ul>
<li>The startup page will be a scene and track grid</li>
<li>Small buttons across the top: Devices, Instruments, Scales</li>
<li>Instruments is not enabled if there are no Devices</li>
<li>There will be a button to add a scene</li>
<li>There will be a button to add a track</li>
<li>There's a save and load button that works from disk, as well as a new/reset button (with confirmation)</li>
<li>Pressing an arrow beside a scene should start all scene clips</li>
<li>Clips can be started and stopped too</li>
<li>There should be a global start/stop button</li>
<li>There will be a save/load file button - these can buttons across the top with devices/instruments/scales</li>
<li>Clips should be able to be rearranged</li>
<li>Scenes and Tracks don't have to be rearranged - feature for later</li>
<li>Add track is disabled until there are devices</li>
<li>Per notes, the file will start up with all MIDI devices populated. If the song has no MIDI devices (because nothing is connected) there should be warning</li>.
</ul>

<h2>Scene Edit Page (Modal)</h2>

<ul>
<li>Just clicking "add scene" creates a empty scene. You don't have to edit it when adding</li>
<li>Clicking on a scene allows editing the tempo and scale assignments.</li>
<li>The tempo and scale can be blank</li>
<li>The scene can be named</li>
<li>The scene advance flag can be toggled</li>
</ul>

<h2>Scale Page (Modal)</h2>

<ul>
<li>We need a widget for creating named scales.  Scales can be user defined or selected from our canned types.</li>
<li>Scales must be created in the system before using them elsewhere.</li>
</ul>

<h2>Track Page (Modal)</h2>

<ul>
<li>Clicking on the track allows for muting the track</li>
<li>The track can be renamed</li>
</ul>

<h2>Clip Page (LARGE Modal)</h2>

<ul>
<li>The clip page shall be full screen or nearly a full screen modal with an easy way to get back to the grid</li>
<li>There will be a Patterns Widget that allows adding and editing each pattern inline</li>
<li>the same kind of widget will exist for Transforms to the right of patterns</li>
<li>The third column contains roller options like scale and rate</li>
<li>You can see all attached patterns and transforms at once</li>
<li>We can toggle the flag that controls scene auto advance or program next clip</li>
<li>Changing anything should have immediate effect, there is no save button
<li>There is no separate "Patterns" page. You can add patterns, remove them, or destroy them from this widget.</li>
<li>Destroying a pattern/transform removes it everywhere it is referenced - but that should only happen from a separate patterns list page.</li>
</ul>

<h2>Pattern/Transform Widget</h2>

<ul>
<li>Each pattern in the clip is shown one on top of each other in a vertical row.  One row for patterns, one for transforms.</li>
<li>This is basically a text area where one slot of the pattern is on it's own line.</li>
<li>When the pattern is changed we need to ask the server if all expressions are valid, and need a method for this</li>
<li>Remember transforms can be two dimensional arrays!  Multiple transforms per line, multiple lines of transforms</li>
<li>If there invalid patterns it should say which are invalid - this may have to wait until they are evaluated during a song</li>
</ul>

<h2>Status Indicators</h2>

<ul>
<li>Callbacks light up the currently playing scenes, clips, and when inside a clip, patterns.</li>
<li>Ideally these callbacks should also light up the currently playing octave shifts, scale degree shifts, tempo shifts, and scales!</li>
<li>The UI could poll to ask, but it will need to ask frequently.... could be websocket based.</li>
</ul>




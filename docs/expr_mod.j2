
<h1>Mod Expressions</h1>

Any {{ doc('expr_intro', 'Expression') }} may be followed by a semicolon and one or more modifiers, seperated by semicolons.
In basic {{ doc('pattern', 'Patterns') }}, these modify the notes in the pattern. In {{ doc('transform', 'Transforms') }}, however,
these expressions do not include a preceeding note or chord symbol, and modify the currently playing part of the pattern on which
they are applied.

<h3>Octave Shifts</h3>

A basic example shows some octave offsets.  Assuming the scale was C major and the base octave was 4...

{{ begin_code() }}1 O+1
1 O-2
2 O=4
{{ end_code() }}

... the above set of patterns would produce a C5, a C2, and D4.

<h3>Velocity Controls</h3>

velocity can be adjusted in one of many ways.

{{ begin_code() }}1 v=100
2 v+10
3 v-10
{{ end_code() }}

Velocity takes a value between 0 and 100, and does not always map to  volume - it depends on your instrument.
The latter two examples might be interesting in arpeggiators. See the "Randomness" section below for more tricks involving
MIDI velocity.

<h3>MIDI CC Controls</h3>

MIDI CCs can be used to add interesting variations.

{{ begin_code() }}1 cc1=20
4
10 cc1=80
{{ end_code() }}

In the above example, the MIDI CC value for channel 1 is "20" for the first 2 notes, and 80 for the last note.
MIDI CCs are sticky. See the "Randomness" section below for more tricks involving MIDI CCs.

<h3>Degree Shifts</h3>

Making a note go up or down a scale interval works as follows:

{{ begin_code() }}1 +5
1 -b3
{{ end_code() }}

The above example shows a perfect fifth and a flat third.

<h3>Flats and Sharps</h3>

Accidentals outside the scale are easy to access:

{{ begin_code() }}1
2
3 b
4
5 #
6
7
{{ end_code() }}

Note that sometimes the accidentals will still be inside the scale.  It depends on the scale.

<h3>Scale Shifts</h3>

scale shifts can jump a note up or down in the current scale:

{{ begin_code() }}1 S+2
4 S-2
{{ end_code() }}

This may seem pointless, because we could have just said "3" or "2" here, but these can be used in powerful ways inside
of arpeggiators.

<h3>Probability Events</h3>

A probability event can be assigned so that the next event has only a partial chance of firing.

{{ begin_code() }}1 p=0.5;O+2
{{ end_code() }}

In the above example, the note will jump an octave only half of the times the pattern plays.

<h3>Silence Events</h3>

Silences are most useful with probabilities.

{{ begin_code() }}1 p=0.5;x
{{ end_code() }}

In the above example, the event will not play half of the time

<h3>Chordification</h3>

While chords can be explicitly entered, chords can also be created from mod expressions in patterns or in arpeggiators.
See the "Randomness" section below for more tricks involving chords.

{{ begin_code() }}1 ch=power
4 ch=major
3 ch=sus4
{{ end_code() }}

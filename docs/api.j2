<h1>API</h1>

<p>
Soon, Warp will have a performance-and-composition-oriented web interface usable by musicians without requiring anyone to code.</p>

<p>
Until then (Fall 2020), the
Python API is available to those wanting to use, explore, and extend Warp.  Even once the UI is available, the API will allow programatically generated compositions
and can be very powerful, and will be able to generate song files that can be loaded with the UI.
</p>

<p>
API examples are part of the project repo, but you can also browse them on <A HREF="https://bitbucket.org/laserllama/warpseq/src/master/examples/api/">BitBucket.</A>
</p>

<p>
The public API is considered (fairly) stable and isolates users from internal code changes within warp.  Methods outside of "public.py" are subject to change.
</p>

<h2>Running the API Example Demos</h2>

<p>
The API demos are live demos that send MIDI events to your software, hardware, or DAW.  Listening to them will require you set up some
tracks or devices that can receive MIDI.  To run them:
</p>

{{ begin_code() }}cd checkout_location
cd examples/api/
PYTHONPATH=. python3 any_example.py
{{ end_code() }}


<p>
<A HREF="https://bitbucket.org/laserllama/warpseq/src/master/examples/api/">The API demos</A> are written to use a specific MIDI interface but if you don't have yours named the same as ours, you can set an environment variable.
On a MAC, this is done as follows:
</p>

{{ begin_code() }}WARP_MIDI_DEVICE="My Device Name" PYTHONPATH=. python3 any_example.py
{{ end_code() }}

Or alternatively:

{{ begin_code() }}export WARP_MIDI_DEVICE="My Device Name"
PYTHONPATH=. python3 any_example.py
{{ end_code() }}